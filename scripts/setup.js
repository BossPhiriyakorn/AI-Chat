#!/usr/bin/env node

/**
 * Setup script for LINE AI Chatbot
 * This script helps users set up the chatbot project
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function question(prompt) {
  return new Promise((resolve) => {
    rl.question(prompt, resolve);
  });
}

async function setup() {
  console.log('üöÄ LINE AI Chatbot Setup');
  console.log('========================\n');

  try {
    // Check if .env exists
    if (fs.existsSync('.env')) {
      const overwrite = await question('‚ö†Ô∏è  .env file already exists. Overwrite? (y/N): ');
      if (overwrite.toLowerCase() !== 'y' && overwrite.toLowerCase() !== 'yes') {
        console.log('‚ùå Setup cancelled');
        process.exit(0);
      }
    }

    console.log('\nüìù Please provide the following information:\n');

    // LINE Bot Configuration
    console.log('üîµ LINE Bot Configuration:');
    const lineChannelAccessToken = await question('LINE Channel Access Token: ');
    const lineChannelSecret = await question('LINE Channel Secret: ');

    // Gemini AI Configuration
    console.log('\nü§ñ Gemini AI Configuration:');
    const geminiApiKey = await question('Gemini API Key: ');
    const geminiModel = await question('Gemini Model (default: gemini-1.5-flash): ') || 'gemini-1.5-flash';

    // Google APIs Configuration
    console.log('\nüìÑ Google APIs Configuration:');
    const googleDocsId = await question('Google Docs ID: ');
    const googleSheetsId = await question('Google Sheets ID: ');
    const googleSheetsRange = await question('Google Sheets Range (default: Sheet1!B:C): ') || 'Sheet1!B:C';

    // Server Configuration
    console.log('\n‚öôÔ∏è  Server Configuration:');
    const port = await question('Port (default: 3000): ') || '3000';
    const nodeEnv = await question('Node Environment (development/production, default: development): ') || 'development';

    // Bot Configuration (Optional - Can be overridden by Google Docs)
    console.log('\nü§ñ Bot Configuration (Optional - Can be overridden by Google Docs):');
    const botName = await question('Bot Name (default: AI Assistant): ') || 'AI Assistant';
    const botPersonality = await question('Bot Personality (default: helpful, friendly, professional): ') || 'helpful, friendly, professional';
    const defaultResponse = await question('Default Response (default: ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ): ') || '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°';

    // Create .env file
    const envContent = `# LINE Bot Configuration
LINE_CHANNEL_ACCESS_TOKEN=${lineChannelAccessToken}
LINE_CHANNEL_SECRET=${lineChannelSecret}

# Gemini AI Configuration
GEMINI_API_KEY=${geminiApiKey}
GEMINI_MODEL=${geminiModel}

# Google APIs Configuration
GOOGLE_CREDENTIALS_PATH=./credentials.json
GOOGLE_DOCS_ID=${googleDocsId}
GOOGLE_SHEETS_ID=${googleSheetsId}
GOOGLE_SHEETS_RANGE=${googleSheetsRange}

# Server Configuration
PORT=${port}
NODE_ENV=${nodeEnv}

# Bot Configuration
BOT_NAME=${botName}
BOT_PERSONALITY=${botPersonality}
DEFAULT_RESPONSE=${defaultResponse}
`;

    fs.writeFileSync('.env', envContent);
    console.log('\n‚úÖ .env file created successfully!');

    // Check if credentials.json exists
    if (!fs.existsSync('credentials.json')) {
      console.log('\n‚ö†Ô∏è  credentials.json not found!');
      console.log('Please download your Google Cloud Service Account credentials and save as credentials.json');
      console.log('Instructions:');
      console.log('1. Go to Google Cloud Console');
      console.log('2. Create or select a project');
      console.log('3. Enable Google Docs API and Google Sheets API');
      console.log('4. Create a Service Account');
      console.log('5. Download the JSON key file');
      console.log('6. Rename it to credentials.json and place it in the project root');
    } else {
      console.log('‚úÖ credentials.json found');
    }

    // Create sample Google Docs content
    const sampleDocsContent = `‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó: ${botName}
‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û: ${botPersonality}
‡∏ï‡∏±‡∏ß‡∏ï‡∏ô: ‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó AI ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡πÅ‡∏•‡∏∞‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
‡πÇ‡∏ó‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á: ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏ï‡∏£, ‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏à, ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
‡∏†‡∏≤‡∏©‡∏≤: thai
‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ${defaultResponse}
‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à: [‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà]

‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:
- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≤‡∏à‡∏ñ‡∏≤‡∏°‡∏ö‡πà‡∏≠‡∏¢
- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡∏£‡∏π‡πâ`;

    fs.writeFileSync('sample-google-docs-content.txt', sampleDocsContent);
    console.log('‚úÖ Sample Google Docs content created (sample-google-docs-content.txt)');

    // Create sample Google Sheets content
    const sampleSheetsContent = `‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î,‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ,‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞
‡∏£‡∏≤‡∏Ñ‡∏≤,‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà [‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤] ‡∏ö‡∏≤‡∏ó
‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£,‡πÄ‡∏£‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ [‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£]
‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà,‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà [‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà]
‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠,‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà [‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠]
‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì,‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤`;

    fs.writeFileSync('sample-google-sheets-content.csv', sampleSheetsContent);
    console.log('‚úÖ Sample Google Sheets content created (sample-google-sheets-content.csv)');

    console.log('\nüéâ Setup completed successfully!');
    console.log('\nüìã Next steps:');
    console.log('1. Copy the content from sample-google-docs-content.txt to your Google Docs');
    console.log('2. Import sample-google-sheets-content.csv to your Google Sheets');
    console.log('3. Share your Google Docs and Google Sheets with your Service Account email');
    console.log('4. Edit your Google Docs to customize bot configuration');
    console.log('5. Run: npm start');
    console.log('\nüîó Useful links:');
    console.log('- Google Cloud Console: https://console.cloud.google.com/');
    console.log('- LINE Developers Console: https://developers.line.biz/console/');
    console.log('- Google AI Studio: https://ai.google.dev/');

  } catch (error) {
    console.error('‚ùå Setup failed:', error.message);
    process.exit(1);
  } finally {
    rl.close();
  }
}

// Run setup
setup();
